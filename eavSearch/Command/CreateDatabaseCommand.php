<?php
namespace eavSearch\Command;

use Doctrine\Common\Persistence\Mapping\Driver\DefaultFileLocator;
use Doctrine\Common\Persistence\Mapping\Driver\PHPDriver;
use Doctrine\DBAL\Driver\PDOMySql\Driver;
use Doctrine\ORM\Configuration;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Mapping\Driver\AnnotationDriver;
use Dotenv\Dotenv;
use eavSearch\EavSearch\SearchEngine;
use eavSearch\Entities\ColumnSearch;
use Medoo\Medoo;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * Created by PhpStorm.
 * User: sunyuw
 * Date: 4/26/18
 * Time: 4:28 PM
 */
class CreateDatabaseCommand extends Command
{

    public function __construct($name = null)
    {
        parent::__construct($name);
    }

    protected function configure()
    {
        $this->setName("app:create-database")
            ->setDescription("create base fundation")
            ->setHelp("any help just see source code");
        $this->addArgument("config_dir", InputArgument::REQUIRED);
        $this->addArgument("overwirte", InputArgument::OPTIONAL, false);
//        parent::configure(); // TODO: Change the autogenerated stub
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $file_name = $input->getArgument("config_dir");
        $env = new Dotenv($file_name);
        $env->load();
        if (!file_exists($file_name)) {
            touch($file_name);
        }
        if (!$env->required(["address", "user", "password", "prefix", "driver"])->notEmpty()) {
            throw new \InvalidArgumentException("必选项为空");
        }
        $this->makeTable($input, $output);
        $output->writeln("hello {$this->getName()}");
    }

    protected function makeTable(InputInterface $input, OutputInterface $output)
    {
        $config = [
            'database_type' => getenv("database_type"),
            'database_name' => getenv("database"),
            'prefix' => getenv("prefix"),
            'server' => getenv("address"),
            'username' => getenv("user"),
            'password' => getenv("password"),
            'charset' => 'utf8'
        ];
        $cs_tpl = "CREATE TABLE `{$config['prefix']}" .SearchEngine::TABLE_NAME. "` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tag` varchar(60) NOT NULL,
  `value` varchar(200) NOT NULL,
  `search_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET={$config['charset']}";
        $medoo = new Medoo($config);
        $rtn = $medoo->query("show tables like '{$config['prefix']}column_search'")->fetch();
        if (!$rtn) {
            $medoo->exec($cs_tpl);
            $output->writeln("{$config['prefix']}column_search 表已被创建");
        } else {
            $output->writeln("{$config['prefix']}column_search 表已经存在,忽略");
        }
    }
}